
<h1 style="margin-bottom: 20px;">{{title}}</h1>

<input type="hidden" id="defaultCartId" value="67f403edea22b423fadcef8c">


<a href="/carts/{{defaultCartId}}">
  <button style="margin-bottom: 20px;">🛍️ Ver carrito de compras</button>
</a>

<form id="productForm" style="display: flex; flex-direction: column; gap: 10px; max-width: 400px;">
  <input type="hidden" id="productId">
  <input type="text" id="title" placeholder="Título" required>
  <input type="text" id="description" placeholder="Descripción" required>
  <input type="text" id="code" placeholder="Código" required>
  <input type="number" id="price" placeholder="Precio" required>
  <input type="number" id="stock" placeholder="Stock" required>
  <input type="text" id="category" placeholder="Categoría" required>
  <input type="text" id="thumbnails" placeholder="URL imagen" required>
  <button type="submit" style="padding: 10px;">💾 Guardar producto</button>
</form>

<hr>

<div style="overflow-x: auto; margin-top: 30px;">
  <table border="1" cellpadding="8" cellspacing="0" style="width: 100%; border-collapse: collapse; min-width: 800px;">
    <thead style="background-color: #f0f0f0;">
      <tr>
        <th>Imagen</th>
        <th>Título</th>
        <th>Precio</th>
        <th>Descripción</th>
        <th>Stock</th>
        <th>Acciones</th>
      </tr>
    </thead>
    <tbody id="productTableBody">
      {{#each products}}
        <tr data-product-id="{{this._id}}">
          <td><img src="{{this.thumbnails.[0]}}" width="60" alt="img"></td>
          <td>{{this.title}}</td>
          <td>$ {{this.price}}</td>
          <td>{{this.description}}</td>
          <td>{{this.stock}}</td>
          <td>
            <button onclick="addToCart('{{this._id}}')">🛒</button>
            <button onclick="loadProductToEdit(`{{this._id}}`, `{{this.title}}`, `{{this.price}}`, `{{this.description}}`, `{{this.stock}}`, `{{this.thumbnails.[0]}}`, `{{this.code}}`, `{{this.category}}`)">✏️</button>
            <button class="btn-delete" data-id="{{this._id}}">❌</button>
          </td>
        </tr>
      {{/each}}
    </tbody>
  </table>
</div>

<div style="margin-top: 30px; display: flex; align-items: center; gap: 15px;">
  {{#if hasPrevPage}}<a href="{{prevLink}}"><button>⬅️ Página anterior</button></a>{{/if}}
  <span>Página {{page}} de {{totalPages}}</span>
  {{#if hasNextPage}}<a href="{{nextLink}}"><button>Página siguiente ➡️</button></a>{{/if}}
</div>

<script>
  const form = document.getElementById('productForm');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const id = document.getElementById('productId').value;
    const title = document.getElementById('title').value;
    const description = document.getElementById('description').value;
    const code = document.getElementById('code').value;
    const price = parseFloat(document.getElementById('price').value);
    const stock = parseInt(document.getElementById('stock').value);
    const category = document.getElementById('category').value;
    const thumbnails = document.getElementById('thumbnails').value;

    const product = { title, description, code, price, stock, category, thumbnails: [thumbnails] };
    const url = id ? `/api/products/${id}` : '/api/products';
    const method = id ? 'PUT' : 'POST';

    const response = await fetch(url, {
      method,
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(product)
    });

    if (response.ok) {
      alert(id ? "✅ Producto actualizado" : "✅ Producto creado");
      window.location.href = "/products";
    } else {
      alert("❌ Error en la operación");
    }
  });

  function loadProductToEdit(id, title, price, description, stock, thumbnail, code, category) {
    document.getElementById('productId').value = id;
    document.getElementById('title').value = title;
    document.getElementById('description').value = description;
    document.getElementById('code').value = code;
    document.getElementById('price').value = price;
    document.getElementById('stock').value = stock;
    document.getElementById('category').value = category;
    document.getElementById('thumbnails').value = thumbnail;
    window.scrollTo({ top: 0, behavior: "smooth" });
  }

  function addToCart(productId) {
    const cartId = document.getElementById('defaultCartId').value;
    if (!cartId) {
      alert("⚠️ No hay carrito disponible.");
      return;
    }

    fetch(`/api/carts/${cartId}/products/${productId}`, { method: 'POST' })
      .then(res => res.ok ? alert("✅ Producto agregado al carrito") : alert("❌ No se pudo agregar al carrito"))
      .catch(err => alert("❌ Error al conectar con el servidor"));
  }

  document.addEventListener('click', async (event) => {
    if (event.target.classList.contains('btn-delete')) {
      const id = event.target.dataset.id;
      if (confirm("¿Eliminar este producto?")) {
        try {
          const res = await fetch(`/api/products/${id}`, { method: 'DELETE' });
          if (res.ok) {
            alert("✅ Producto eliminado");
            event.target.closest('tr').remove();
          } else {
            const data = await res.json();
            alert(data.error || "❌ No se pudo eliminar el producto");
          }
        } catch (err) {
          alert("❌ Error al conectar con el servidor");
        }
      }
    }
  });
</script>
